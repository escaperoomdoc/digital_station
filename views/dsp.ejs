<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
	<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no">
    <title>ДСП</title>
    <link rel="stylesheet" href="dsp/css/main.css">
    <script src="libs/vue.js"></script>
</head>
<body>
    <main class="app">
        <header>
            <p>Станция «Цифровая»</p>
            <div class="menu">
				<div @click="play"><%-playxml%></div>
				<div @click="pause"><%-pausexml%></div>
				<div @click="complete"><%-completexml%></div>
				<div @click="reset"><%-stopxml%></div>
            </div>
            <p>{{ time }}</p>
        </header>
        <section class="station">
			<%-rdmxml%>
        </section>
        <section class="process">
			<%-flowxml%>
        </section>
        <section class="logger">
			<h3>Операции</h3>
			<ul>
				<li v-for="string in logger">
					<div>{{ string.name }}: </div>
					<div :class="'logger_'+string.state">{{ string.text }}</div>
				</li>
			</ul>
		</section>
        <section class="abonents">
            <h3>Терминалы</h3>
            <ul>
                <li v-for = "(abonent, i) in abonents">
                    {{ abonents[i].name }}
                </li>
            </ul>
        </section>
		<section class="confirmArea">
			<h3>Текущая операция</h3>
			<div class="currentFlow" :class="[{'list_ready_state': message.state=='ready'},
                                                 {'list_active_state': message.state=='active' && message.time >= 0},
                                                 {'list_fail_state': message.state=='active' && message.time < 0}]"
				 :style="progressBar()">
				{{ status }}
				<div v-if="message.state=='active'" class="timeActive">{{ message.time }} мин</div>
			</div>
			<transition name="submenu">
				<div  class="confirmForm" v-show="message.state!='idle'">
					<div class="confirmMessage">{{ message.text }}</div>
					<transition name="submenuButtons">
						<div class="buttons" v-show="message.state=='active'">
							<button class="confirm" @click="confirm">OK</button>
							<button class="cancel" @click="cancel">Cancel</button>
						</div>
					</transition>
				</div>
			</transition>
		</section>
		<audio>
			<source src="mobile/audio/signal.mp3">
			<source src="mobile/audio/signal.ogg">
		</audio>
    </main>
    <script src="dsp/js/main.js"></script>
    <script src="libs/socket.io.dev.js"></script>
    <script>
        var socket = io.connect(location.host);
        socket.on('server2client', function(data) {
				try {
					var obj = JSON.parse(data);
					console.log(obj);
					updateModel(obj);
				}
				catch(error) {
					console.log('ERROR : ' + error + ' # ' + data);
				}
        });
        setInterval(() => {
            socket.emit('client2server', '{"name":"dsp"}');
        }, 1000);
    </script>
</body>
</html>